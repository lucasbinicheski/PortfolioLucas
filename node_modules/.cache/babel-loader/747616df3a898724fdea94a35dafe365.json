{"ast":null,"code":"import _slicedToArray from\"/home/lucas/Documentos/portfolio/PortfolioLucas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,createContext}from\"react\";import{LightTheme,DarkTheme}from\"./Themes\";import{MuiThemeProvider}from\"@material-ui/core/styles\";export var ThemeContext=createContext();export var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var getInitialMode=function getInitialMode(){if(typeof localStorage===\"undefined\")return true;var isReturningUser=(\"dark\"in localStorage);var savedMode=JSON.parse(localStorage.getItem(\"dark\"));var userPrefersDark=getPrefColorScheme();if(isReturningUser){return savedMode;}return!!userPrefersDark;};var getPrefColorScheme=function getPrefColorScheme(){if(!window.matchMedia)return;return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;};var _useState=useState(getInitialMode()?\"dark\":\"light\"),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];var toggleTheme=function toggleTheme(){if(theme===\"light\"){setTheme(\"dark\");}else{setTheme(\"light\");}};useEffect(function(){typeof localStorage!==\"undefined\"&&localStorage.setItem(\"dark\",JSON.stringify(theme===\"dark\"));},[theme]);return/*#__PURE__*/React.createElement(ThemeContext.Provider,{value:{theme:theme,toggleTheme:toggleTheme}},/*#__PURE__*/React.createElement(MuiThemeProvider,{theme:theme===\"light\"?LightTheme:DarkTheme},children));};","map":{"version":3,"sources":["/home/lucas/Documentos/portfolio/PortfolioLucas/src/components/theme/ThemeProvider.js"],"names":["React","useEffect","useState","createContext","LightTheme","DarkTheme","MuiThemeProvider","ThemeContext","ThemeProvider","children","getInitialMode","localStorage","isReturningUser","savedMode","JSON","parse","getItem","userPrefersDark","getPrefColorScheme","window","matchMedia","matches","theme","setTheme","toggleTheme","setItem","stringify"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,aAArC,KAA0D,OAA1D,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,UAAtC,CACA,OAASC,gBAAT,KAAiC,0BAAjC,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAGJ,aAAa,EAAlC,CAEP,MAAO,IAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC3C,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAI,MAAOC,CAAAA,YAAP,GAAwB,WAA5B,CAAyC,MAAO,KAAP,CACzC,GAAMC,CAAAA,eAAe,EAAG,QAAUD,CAAAA,YAAb,CAArB,CACA,GAAME,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX,CAAlB,CACA,GAAMC,CAAAA,eAAe,CAAGC,kBAAkB,EAA1C,CACA,GAAIN,eAAJ,CAAqB,CACjB,MAAOC,CAAAA,SAAP,CACH,CACD,MAAO,CAAC,CAACI,eAAT,CACH,CATD,CAWA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7B,GAAI,CAACC,MAAM,CAACC,UAAZ,CAAwB,OAExB,MAAOD,CAAAA,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAzD,CACH,CAJD,CAMA,cAA0BnB,QAAQ,CAACQ,cAAc,GAAK,MAAL,CAAc,OAA7B,CAAlC,wCAAOY,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAIF,KAAK,GAAK,OAAd,CAAuB,CACnBC,QAAQ,CAAC,MAAD,CAAR,CACH,CAFD,IAEO,CACHA,QAAQ,CAAC,OAAD,CAAR,CACH,CACJ,CAND,CAQAtB,SAAS,CAAC,UAAM,CACZ,MAAOU,CAAAA,YAAP,GAAwB,WAAxB,EACIA,YAAY,CAACc,OAAb,CAAqB,MAArB,CAA6BX,IAAI,CAACY,SAAL,CAAeJ,KAAK,GAAK,MAAzB,CAA7B,CADJ,CAEH,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAKA,mBACI,oBAAC,YAAD,CAAc,QAAd,EACI,KAAK,CAAE,CACHA,KAAK,CAALA,KADG,CAEHE,WAAW,CAAXA,WAFG,CADX,eAMI,oBAAC,gBAAD,EACI,KAAK,CAAEF,KAAK,GAAK,OAAV,CAAoBlB,UAApB,CAAiCC,SAD5C,EAGKI,QAHL,CANJ,CADJ,CAcH,CA/CM","sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\nimport { LightTheme, DarkTheme } from \"./Themes\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n    const getInitialMode = () => {\n        if (typeof localStorage === \"undefined\") return true;\n        const isReturningUser = \"dark\" in localStorage;\n        const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\n        const userPrefersDark = getPrefColorScheme();\n        if (isReturningUser) {\n            return savedMode;\n        }\n        return !!userPrefersDark;\n    };\n\n    const getPrefColorScheme = () => {\n        if (!window.matchMedia) return;\n\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    };\n\n    const [theme, setTheme] = useState(getInitialMode() ? \"dark\" : \"light\");\n\n    const toggleTheme = () => {\n        if (theme === \"light\") {\n            setTheme(\"dark\");\n        } else {\n            setTheme(\"light\");\n        }\n    };\n\n    useEffect(() => {\n        typeof localStorage !== \"undefined\" &&\n            localStorage.setItem(\"dark\", JSON.stringify(theme === \"dark\"));\n    }, [theme]);\n\n    return (\n        <ThemeContext.Provider\n            value={{\n                theme,\n                toggleTheme,\n            }}\n        >\n            <MuiThemeProvider\n                theme={theme === \"light\" ? LightTheme : DarkTheme}\n            >\n                {children}\n            </MuiThemeProvider>\n        </ThemeContext.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}