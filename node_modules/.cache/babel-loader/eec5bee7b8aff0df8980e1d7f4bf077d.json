{"ast":null,"code":"import _slicedToArray from\"/home/lucas/Documentos/portfolio/PortfolioLucas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";export var useInViewport=function useInViewport(elementRef,unobserveOnIntersect){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),intersect=_useState2[0],setIntersect=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isUnobserved=_useState4[0],setIsUnobserved=_useState4[1];useEffect(function(){if(!(elementRef===null||elementRef===void 0?void 0:elementRef.current))return;var observer=new IntersectionObserver(function(_ref){var _ref2=_slicedToArray(_ref,1),entry=_ref2[0];var isIntersecting=entry.isIntersecting,target=entry.target;setIntersect(isIntersecting);if(isIntersecting&&unobserveOnIntersect){observer.unobserve(target);setIsUnobserved(true);}},options);if(!isUnobserved){observer.observe(elementRef.current);}return function(){return observer.disconnect();};},[elementRef,unobserveOnIntersect,options,isUnobserved]);return intersect;};","map":{"version":3,"sources":["/home/lucas/Documentos/portfolio/PortfolioLucas/src/hooks/useInViewport.js"],"names":["useEffect","useState","useInViewport","elementRef","unobserveOnIntersect","options","intersect","setIntersect","isUnobserved","setIsUnobserved","current","observer","IntersectionObserver","entry","isIntersecting","target","unobserve","observe","disconnect"],"mappings":"sKAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CACzBC,UADyB,CAEzBC,oBAFyB,CAIxB,IADDC,CAAAA,OACC,2DADS,EACT,CACD,cAAkCJ,QAAQ,CAAC,KAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA,eAAwCN,QAAQ,CAAC,KAAD,CAAhD,yCAAOO,YAAP,eAAqBC,eAArB,eAEAT,SAAS,CAAC,UAAM,CACZ,GAAI,EAACG,UAAD,SAACA,UAAD,iBAACA,UAAU,CAAEO,OAAb,CAAJ,CAA0B,OAE1B,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,oBAAJ,CAAyB,cAAa,kCAAXC,KAAW,UACnD,GAAQC,CAAAA,cAAR,CAAmCD,KAAnC,CAAQC,cAAR,CAAwBC,MAAxB,CAAmCF,KAAnC,CAAwBE,MAAxB,CAEAR,YAAY,CAACO,cAAD,CAAZ,CAEA,GAAIA,cAAc,EAAIV,oBAAtB,CAA4C,CACxCO,QAAQ,CAACK,SAAT,CAAmBD,MAAnB,EACAN,eAAe,CAAC,IAAD,CAAf,CACH,CACJ,CATgB,CASdJ,OATc,CAAjB,CAWA,GAAI,CAACG,YAAL,CAAmB,CACfG,QAAQ,CAACM,OAAT,CAAiBd,UAAU,CAACO,OAA5B,EACH,CAED,MAAO,kBAAMC,CAAAA,QAAQ,CAACO,UAAT,EAAN,EAAP,CACH,CAnBQ,CAmBN,CAACf,UAAD,CAAaC,oBAAb,CAAmCC,OAAnC,CAA4CG,YAA5C,CAnBM,CAAT,CAqBA,MAAOF,CAAAA,SAAP,CACH,CA9BM","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const useInViewport = (\n    elementRef,\n    unobserveOnIntersect,\n    options = {}\n) => {\n    const [intersect, setIntersect] = useState(false);\n    const [isUnobserved, setIsUnobserved] = useState(false);\n\n    useEffect(() => {\n        if (!elementRef?.current) return;\n\n        const observer = new IntersectionObserver(([entry]) => {\n            const { isIntersecting, target } = entry;\n\n            setIntersect(isIntersecting);\n\n            if (isIntersecting && unobserveOnIntersect) {\n                observer.unobserve(target);\n                setIsUnobserved(true);\n            }\n        }, options);\n\n        if (!isUnobserved) {\n            observer.observe(elementRef.current);\n        }\n\n        return () => observer.disconnect();\n    }, [elementRef, unobserveOnIntersect, options, isUnobserved]);\n\n    return intersect;\n};\n"]},"metadata":{},"sourceType":"module"}