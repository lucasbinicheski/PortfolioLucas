{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Documentos/portfolio/PortfolioLucas/src/components/content/TextDecrypt.js\";\nimport React, { useEffect } from \"react\";\nimport { useDencrypt } from \"use-dencrypt-effect\";\nconst decryptOptions = {\n  chars: [\"-\", \".\", \"/\", \"*\", \"!\", \"?\", \"#\", \"%\", \"&\", \"@\", \"$\", \"€\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\", \"~\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"],\n  interval: 50\n};\nexport const TextDecrypt = props => {\n  const {\n    result,\n    dencrypt\n  } = useDencrypt(decryptOptions);\n  useEffect(() => {\n    const updateText = () => {\n      dencrypt(props.text || \"\");\n    };\n\n    const action = setTimeout(updateText, 0);\n    return () => clearTimeout(action);\n  }, [dencrypt, props.text]);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, result, \" \");\n};","map":{"version":3,"sources":["/home/lucas/Documentos/portfolio/PortfolioLucas/src/components/content/TextDecrypt.js"],"names":["React","useEffect","useDencrypt","decryptOptions","chars","interval","TextDecrypt","props","result","dencrypt","updateText","text","action","setTimeout","clearTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,CACH,GADG,EAEH,GAFG,EAGH,GAHG,EAIH,GAJG,EAKH,GALG,EAMH,GANG,EAOH,GAPG,EAQH,GARG,EASH,GATG,EAUH,GAVG,EAWH,GAXG,EAYH,GAZG,EAaH,GAbG,EAcH,GAdG,EAeH,GAfG,EAgBH,GAhBG,EAiBH,GAjBG,EAkBH,GAlBG,EAmBH,GAnBG,EAoBH,GApBG,EAqBH,GArBG,EAsBH,GAtBG,EAuBH,GAvBG,EAwBH,GAxBG,EAyBH,GAzBG,EA0BH,GA1BG,EA2BH,GA3BG,EA4BH,GA5BG,EA6BH,GA7BG,EA8BH,GA9BG,EA+BH,GA/BG,EAgCH,GAhCG,EAiCH,GAjCG,EAkCH,GAlCG,EAmCH,GAnCG,EAoCH,GApCG,EAqCH,GArCG,EAsCH,GAtCG,EAuCH,GAvCG,EAwCH,GAxCG,EAyCH,GAzCG,EA0CH,GA1CG,EA2CH,GA3CG,EA4CH,GA5CG,EA6CH,GA7CG,EA8CH,GA9CG,EA+CH,GA/CG,EAgDH,GAhDG,EAiDH,GAjDG,EAkDH,GAlDG,EAmDH,GAnDG,EAoDH,GApDG,EAqDH,GArDG,EAsDH,GAtDG,EAuDH,GAvDG,EAwDH,GAxDG,EAyDH,GAzDG,CADY;AA4DnBC,EAAAA,QAAQ,EAAE;AA5DS,CAAvB;AA+DA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBP,WAAW,CAACC,cAAD,CAAxC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,UAAU,GAAG,MAAM;AACrBD,MAAAA,QAAQ,CAACF,KAAK,CAACI,IAAN,IAAc,EAAf,CAAR;AACH,KAFD;;AAIA,UAAMC,MAAM,GAAGC,UAAU,CAACH,UAAD,EAAa,CAAb,CAAzB;AAEA,WAAO,MAAMI,YAAY,CAACF,MAAD,CAAzB;AACH,GARQ,EAQN,CAACH,QAAD,EAAWF,KAAK,CAACI,IAAjB,CARM,CAAT;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,MADL,EAEK,GAFL,CADJ;AAMH,CAnBM","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDencrypt } from \"use-dencrypt-effect\";\n\nconst decryptOptions = {\n    chars: [\n        \"-\",\n        \".\",\n        \"/\",\n        \"*\",\n        \"!\",\n        \"?\",\n        \"#\",\n        \"%\",\n        \"&\",\n        \"@\",\n        \"$\",\n        \"€\",\n        \"(\",\n        \")\",\n        \"[\",\n        \"]\",\n        \"{\",\n        \"}\",\n        \"<\",\n        \">\",\n        \"~\",\n        \"0\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"a\",\n        \"b\",\n        \"c\",\n        \"d\",\n        \"e\",\n        \"f\",\n        \"g\",\n        \"h\",\n        \"i\",\n        \"j\",\n        \"k\",\n        \"l\",\n        \"m\",\n        \"n\",\n        \"o\",\n        \"p\",\n        \"q\",\n        \"r\",\n        \"s\",\n        \"t\",\n        \"u\",\n        \"v\",\n        \"w\",\n        \"x\",\n        \"y\",\n        \"z\",\n    ],\n    interval: 50,\n};\n\nexport const TextDecrypt = (props) => {\n    const { result, dencrypt } = useDencrypt(decryptOptions);\n\n    useEffect(() => {\n        const updateText = () => {\n            dencrypt(props.text || \"\");\n        };\n\n        const action = setTimeout(updateText, 0);\n\n        return () => clearTimeout(action);\n    }, [dencrypt, props.text]);\n\n    return (\n        <p>\n            {result}\n            {\" \"}\n        </p>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}